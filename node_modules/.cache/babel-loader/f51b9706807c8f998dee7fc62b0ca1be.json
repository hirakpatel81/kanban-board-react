{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\BoardLanes.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { BoardContext } from \"./Board\";\nimport Lane from \"./Lane\";\n\nfunction BoardLanes(props) {\n  const {\n    onDragOverHandler,\n    onDropHandler,\n    onTaskContainerDragStartHandler,\n    onTaskContainerDropHandler,\n    onTaskContainerDragOverHandler\n  } = useContext(BoardContext);\n  const [divWidth, setDivWidth] = useState(0);\n  useEffect(() => {\n    const totalWidth = props.stages.length * 292 + props.stages.length * 20;\n    setDivWidth(totalWidth);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: divWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, props.stages.map((stage, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-column\",\n    key: index,\n    onDragStart: event => onTaskContainerDragStartHandler(event, stage.id),\n    onDragOver: event => onTaskContainerDragOverHandler(event),\n    onDrop: event => onTaskContainerDropHandler(event, stage.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header stage-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-title text-uppercase text-truncate py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, stage.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    onDrop: event => onDropHandler(event, stage.id),\n    onDragOver: event => onDragOverHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Lane, {\n    stage: stage,\n    key: stage.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: event => TaskContainerDropEvent(event, stage.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default BoardLanes;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/BoardLanes.js"],"names":["React","useContext","useState","useEffect","BoardContext","Lane","BoardLanes","props","onDragOverHandler","onDropHandler","onTaskContainerDragStartHandler","onTaskContainerDropHandler","onTaskContainerDragOverHandler","divWidth","setDivWidth","totalWidth","stages","length","width","map","stage","index","event","id","name","TaskContainerDropEvent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,+BAHI;AAIJC,IAAAA,0BAJI;AAKJC,IAAAA;AALI,MAMFX,UAAU,CAACG,YAAD,CANd;AAOA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsB,GAAtB,GAA4BV,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsB,EAArE;AACAH,IAAAA,WAAW,CAACC,UAAD,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEL;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACS,MAAN,CAAaG,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBAChB,uDACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,GAAG,EAAEA,KAFP;AAGE,IAAA,WAAW,EAAGC,KAAD,IACXZ,+BAA+B,CAACY,KAAD,EAAQF,KAAK,CAACG,EAAd,CAJnC;AAME,IAAA,UAAU,EAAGD,KAAD,IAAWV,8BAA8B,CAACU,KAAD,CANvD;AAOE,IAAA,MAAM,EAAGA,KAAD,IAAWX,0BAA0B,CAACW,KAAD,EAAQF,KAAK,CAACG,EAAd,CAP/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,IADT,CADF,CADF,eAME;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,MAAM,EAAGF,KAAD,IAAWb,aAAa,CAACa,KAAD,EAAQF,KAAK,CAACG,EAAd,CAFlC;AAGE,IAAA,UAAU,EAAGD,KAAD,IAAWd,iBAAiB,CAACc,KAAD,CAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAb;AAAoB,IAAA,GAAG,EAAEA,KAAK,CAACG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CANF,CATF,CADF,eAyBE;AACE,IAAA,MAAM,EAAGD,KAAD,IAAWG,sBAAsB,CAACH,KAAD,EAAQF,KAAK,CAACG,EAAd,CAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADD,CADH,CADF,CADF;AAqCD;;AAED,eAAejB,UAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { BoardContext } from \"./Board\";\r\nimport Lane from \"./Lane\";\r\nfunction BoardLanes(props) {\r\n  const {\r\n    onDragOverHandler,\r\n    onDropHandler,\r\n    onTaskContainerDragStartHandler,\r\n    onTaskContainerDropHandler,\r\n    onTaskContainerDragOverHandler,\r\n  } = useContext(BoardContext);\r\n  const [divWidth, setDivWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const totalWidth = props.stages.length * 292 + props.stages.length * 20;\r\n    setDivWidth(totalWidth);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"column-wrapper\">\r\n      <div style={{ width: divWidth }}>\r\n        {props.stages.map((stage, index) => (\r\n          <>\r\n            <div\r\n              className=\"card-column\"\r\n              key={index}\r\n              onDragStart={(event) =>\r\n                onTaskContainerDragStartHandler(event, stage.id)\r\n              }\r\n              onDragOver={(event) => onTaskContainerDragOverHandler(event)}\r\n              onDrop={(event) => onTaskContainerDropHandler(event, stage.id)}\r\n            >\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-header stage-header\">\r\n                  <h6 className=\"card-title text-uppercase text-truncate py-2\">\r\n                    {stage.name}\r\n                  </h6>\r\n                </div>\r\n                <div\r\n                  className=\"card-body\"\r\n                  onDrop={(event) => onDropHandler(event, stage.id)}\r\n                  onDragOver={(event) => onDragOverHandler(event)}\r\n                >\r\n                  <Lane stage={stage} key={stage.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              onDrop={(event) => TaskContainerDropEvent(event, stage.id)}\r\n            ></div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardLanes;\r\n"]},"metadata":{},"sourceType":"module"}