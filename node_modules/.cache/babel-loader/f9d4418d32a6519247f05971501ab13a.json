{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\New Task\\\\NewTask.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./NewTask.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required(\"Title is required\"),\n  description: Yup.string().required(\"Description is required\"),\n  startDate: Yup.date().nullable().required(\"Start Date is required\"),\n  //endDate: Yup.date().nullable().required(\"End Date is required\"),\n  endDate: Yup.date().when(\"startDate\", (startDate, schema) => startDate && schema.min(startDate, \"End date must be after th start date.\")).nullable().required(\"End Date is required\")\n});\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  startDate: new Date(),\n  endDate: new Date()\n};\n\nfunction NewTask(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  useEffect(() => {}, []);\n\n  const onSubmit = (values, submitProps) => {\n    submitProps.setSubmitting(false);\n    props.addNewTask(values);\n    setShow(false);\n    submitProps.resetForm();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"New Task\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"New Task\")), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      className: `form-control ${formik.touched.title && formik.errors.title ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      component: \"div\",\n      name: \"title\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      className: `form-control ${formik.touched.description && formik.errors.description ? \"is-invalid\" : \"\"}`,\n      as: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      component: \"div\",\n      name: \"description\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: formik.values.startDate,\n      name: \"startDate\",\n      id: \"startDate\",\n      onBlur: formik.handleBlur,\n      onChange: date => formik.setFieldValue('startDate', date),\n      className: `form-control ${formik.touched.startDate && formik.errors.startDate ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      component: \"div\",\n      name: \"startDate\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: formik.values.endDate,\n      name: \"endDate\",\n      onBlur: formik.handleBlur,\n      onChange: date => formik.setFieldValue('endDate', date),\n      className: `form-control ${formik.touched.endDate && formik.errors.endDate ? \"is-invalid\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      component: \"div\",\n      name: \"endDate\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, \"Save Changes\"))));\n  }));\n}\n\nexport default NewTask;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/New Task/NewTask.js"],"names":["React","useState","useEffect","Button","Modal","FormGroup","FormLabel","Formik","Form","Field","ErrorMessage","Yup","DatePicker","validationSchema","object","shape","title","string","required","description","startDate","date","nullable","endDate","when","schema","min","initialValues","Date","NewTask","props","show","setShow","handleClose","handleShow","onSubmit","values","submitProps","setSubmitting","addNewTask","resetForm","formik","touched","errors","handleBlur","setFieldValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./NewTask.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"Title is required\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n  startDate: Yup.date().nullable().required(\"Start Date is required\"),\r\n  //endDate: Yup.date().nullable().required(\"End Date is required\"),\r\n  endDate: Yup\r\n        .date()\r\n        .when(\r\n            \"startDate\",\r\n            (startDate, schema) => startDate && schema.min(startDate,\"End date must be after th start date.\")).nullable().required(\"End Date is required\")\r\n});\r\nconst initialValues = {\r\n  title: \"\",\r\n  description: \"\",\r\n  startDate: new Date(),\r\n  endDate: new Date(),\r\n};\r\n\r\nfunction NewTask(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const onSubmit = (values, submitProps) => {\r\n    submitProps.setSubmitting(false);\r\n    props.addNewTask(values);\r\n    setShow(false);\r\n    submitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        New Task\r\n      </Button>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>New Task</Modal.Title>\r\n              </Modal.Header>\r\n              <Form>\r\n                <Modal.Body>\r\n                  <FormGroup>\r\n                    <FormLabel>Title</FormLabel>\r\n                    <Field\r\n                      type=\"text\"\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      className={`form-control ${\r\n                        formik.touched.title && formik.errors.title\r\n                          ? \"is-invalid\"\r\n                          : \"\"\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"title\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormLabel>Description</FormLabel>\r\n                    <Field\r\n                      type=\"text\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      className={`form-control ${\r\n                        formik.touched.description && formik.errors.description\r\n                          ? \"is-invalid\"\r\n                          : \"\"\r\n                      }`}\r\n                      as=\"textarea\"\r\n                    />\r\n                    <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"description\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormLabel>Start Date</FormLabel>\r\n                   \r\n                     <DatePicker \r\n                      selected={formik.values.startDate}                     \r\n                      name=\"startDate\"\r\n                      id=\"startDate\"\r\n                      onBlur={formik.handleBlur}\r\n                     onChange={date => formik.setFieldValue('startDate', date)}\r\n                      className={`form-control ${\r\n                        formik.touched.startDate && formik.errors.startDate\r\n                          ? \"is-invalid\"\r\n                          : \"\"\r\n                      }`}\r\n                    />\r\n                     <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"startDate\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormLabel>End Date</FormLabel>\r\n                    <DatePicker \r\n                   \r\n                      selected={formik.values.endDate}                     \r\n                      name=\"endDate\"\r\n                      onBlur={formik.handleBlur}\r\n                      onChange={date => formik.setFieldValue('endDate', date)}\r\n                      className={`form-control ${\r\n                        formik.touched.endDate && formik.errors.endDate\r\n                          ? \"is-invalid\"\r\n                          : \"\"\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"endDate\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </FormGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={handleClose}\r\n                    type=\"reset\"\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Save Changes\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Form>\r\n            </Modal>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewTask;\r\n"]},"metadata":{},"sourceType":"module"}