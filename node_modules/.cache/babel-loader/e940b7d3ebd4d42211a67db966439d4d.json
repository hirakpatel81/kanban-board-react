{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\Board.js\";\nimport React, { useState, useEffect, useReducer, createContext } from 'react';\nimport NewTask from './New Task/NewTask'; // const ContextData = {\n//     tasks,\n//     DragStartEvent,\n//     DragOverEvent,\n//     DropEvent,\n//     TaskContainerDragStartEvent,\n//     TaskContainerDropEvent,\n//     TaskContainerDragOverEvent,\n//     UpdateTask,\n//     DeleteTask\n//   };\n\nconst stagesData = [{\n  name: \"Planning\",\n  id: 1\n}, {\n  name: \"In Progress\",\n  id: 2\n}, {\n  name: \"Review\",\n  id: 3\n}, {\n  name: \"Testing\",\n  id: 4\n}, {\n  name: \"Launch\",\n  id: 5\n}];\nconst taskData = [{\n  id: 1,\n  title: \"Task 1\",\n  description: \"Testing of\",\n  stage: 1,\n  startDate: new Date(2020, 3, 1),\n  endDate: new Date(2020, 3, 20)\n}, {\n  id: 2,\n  title: \"Task 2\",\n  description: \"Just Test 2\",\n  stage: 1,\n  startDate: new Date(2020, 2, 25),\n  endDate: new Date(2020, 3, 25)\n}, {\n  id: 3,\n  title: \"Task 3\",\n  description: \"Just Test\",\n  stage: 2,\n  startDate: new Date(2020, 1, 1),\n  endDate: new Date(2020, 1, 25)\n}, {\n  id: 4,\n  title: \"Task 4\",\n  description: \"Just Test\",\n  stage: 3,\n  startDate: new Date(2020, 0, 5),\n  endDate: new Date(2020, 1, 15)\n}, {\n  id: 5,\n  title: \"Task 5\",\n  description: \"Just Test\",\n  stage: 4,\n  startDate: new Date(2020, 2, 5),\n  endDate: new Date(2020, 3, 12)\n}, {\n  id: 5,\n  title: \"Task 5\",\n  description: \"Just Test\",\n  stage: 5,\n  startDate: new Date(2020, 2, 5),\n  endDate: new Date(2020, 3, 12)\n}];\nexport const BoardContext = createContext({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ON_DROP\":\n      const droppedTask = action.payload;\n      const updatedTasks = state.map(task => {\n        if (task.id === droppedTask.id) {\n          return droppedTask;\n        }\n\n        return task;\n      });\n      return updatedTasks;\n\n    case \"LOAD_DATA\":\n      return action.payload;\n\n    case \"ADD_NEW\":\n      return [...state, action.payload];\n\n    case \"ON_DELETE\":\n      return state.filter(task => task.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction Board() {\n  const [taskState, dispatch] = useReducer(reducer, taskData);\n  const [stages, setStage] = useState(stagesData);\n  useEffect(() => {\n    dispatch({\n      type: \"LOAD_DATA\",\n      payload: taskState\n    });\n  }, [taskState, stages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NewTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default Board;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/Board.js"],"names":["React","useState","useEffect","useReducer","createContext","NewTask","stagesData","name","id","taskData","title","description","stage","startDate","Date","endDate","BoardContext","reducer","state","action","type","droppedTask","payload","updatedTasks","map","task","filter","Board","taskState","dispatch","stages","setStage"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA6CC,aAA7C,QAAiE,OAAjE;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,CACf;AAAEC,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,EAAE,EAAE;AAAxB,CADe,EAEf;AAAED,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,EAAE,EAAE;AAA3B,CAFe,EAGf;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,EAAE,EAAE;AAAtB,CAHe,EAIf;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,EAAE,EAAE;AAAvB,CAJe,EAKf;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,EAAE,EAAE;AAAtB,CALe,CAAnB;AAOA,MAAMC,QAAQ,GAAG,CACb;AACED,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,YAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CADa,EASb;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,aAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CATa,EAiBb;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAjBa,EAyBb;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAzBa,EAiCb;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAjCa,EAyCb;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAzCa,CAAjB;AAkDE,OAAO,MAAME,YAAY,GAAGZ,aAAa,CAAC,EAAD,CAAlC;;AACP,SAASa,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,YAAMC,WAAW,GAAGF,MAAM,CAACG,OAA3B;AACA,YAAMC,YAAY,GAAGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACvC,YAAIA,IAAI,CAACjB,EAAL,KAAYa,WAAW,CAACb,EAA5B,EAAgC;AAC9B,iBAAOa,WAAP;AACD;;AACD,eAAOI,IAAP;AACD,OALoB,CAArB;AAMA,aAAOF,YAAP;;AACF,SAAK,WAAL;AACE,aAAOJ,MAAM,CAACG,OAAd;;AACF,SAAK,SAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACF,SAAK,WAAL;AACE,aAAOJ,KAAK,CAACQ,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACjB,EAAL,KAAYW,MAAM,CAACG,OAA1C,CAAP;;AACF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD;;AACH,SAASS,KAAT,GAAiB;AACb,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwB1B,UAAU,CAACc,OAAD,EAAUR,QAAV,CAAxC;AACA,QAAM,CAACqB,MAAD,EAASC,QAAT,IAAqB9B,QAAQ,CAACK,UAAD,CAAnC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,WAAR;AAAqBE,MAAAA,OAAO,EAAEM;AAA9B,KAAD,CAAR;AACD,GAFM,EAEJ,CAACA,SAAD,EAAWE,MAAX,CAFI,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPA,CADJ;AAeH;;AAED,eAAeH,KAAf","sourcesContent":["import React,{useState,useEffect, useReducer,createContext} from 'react'\r\nimport NewTask from './New Task/NewTask'\r\n// const ContextData = {\r\n//     tasks,\r\n//     DragStartEvent,\r\n//     DragOverEvent,\r\n//     DropEvent,\r\n//     TaskContainerDragStartEvent,\r\n//     TaskContainerDropEvent,\r\n//     TaskContainerDragOverEvent,\r\n//     UpdateTask,\r\n//     DeleteTask\r\n//   };\r\nconst stagesData = [\r\n    { name: \"Planning\", id: 1 },\r\n    { name: \"In Progress\", id: 2 },\r\n    { name: \"Review\", id: 3 },\r\n    { name: \"Testing\", id: 4 },\r\n    { name: \"Launch\", id: 5 },\r\n  ];\r\nconst taskData = [\r\n    {\r\n      id: 1,\r\n      title: \"Task 1\",\r\n      description: \"Testing of\",\r\n      stage: 1,\r\n      startDate: new Date(2020, 3, 1),\r\n      endDate: new Date(2020, 3, 20),\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Task 2\",\r\n      description: \"Just Test 2\",\r\n      stage: 1,\r\n      startDate: new Date(2020, 2, 25),\r\n      endDate: new Date(2020, 3, 25),\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Task 3\",\r\n      description: \"Just Test\",\r\n      stage: 2,\r\n      startDate: new Date(2020, 1, 1),\r\n      endDate: new Date(2020, 1, 25),\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Task 4\",\r\n      description: \"Just Test\",\r\n      stage: 3,\r\n      startDate: new Date(2020, 0, 5),\r\n      endDate: new Date(2020, 1, 15),\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Task 5\",\r\n      description: \"Just Test\",\r\n      stage: 4,\r\n      startDate: new Date(2020, 2, 5),\r\n      endDate: new Date(2020, 3, 12),\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Task 5\",\r\n      description: \"Just Test\",\r\n      stage: 5,\r\n      startDate: new Date(2020, 2, 5),\r\n      endDate: new Date(2020, 3, 12),\r\n    },\r\n  ]; \r\n  export const BoardContext = createContext({});\r\n  function reducer(state, action){\r\n    switch (action.type) {\r\n      case \"ON_DROP\":\r\n        const droppedTask = action.payload;\r\n        const updatedTasks = state.map((task) => {\r\n          if (task.id === droppedTask.id) {\r\n            return droppedTask;\r\n          }\r\n          return task;\r\n        });\r\n        return updatedTasks;\r\n      case \"LOAD_DATA\":\r\n        return action.payload;\r\n      case \"ADD_NEW\":\r\n        return [...state, action.payload];\r\n      case \"ON_DELETE\":\r\n        return state.filter((task) => task.id !== action.payload);\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\nfunction Board() {\r\n    const [taskState, dispatch] = useReducer(reducer, taskData);\r\n    const [stages, setStage] = useState(stagesData)\r\n    useEffect(() => {\r\n        dispatch({ type: \"LOAD_DATA\", payload: taskState });\r\n      }, [taskState,stages]);\r\n    return (\r\n        <div className=\"container-fluid pt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <NewTask/>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n"]},"metadata":{},"sourceType":"module"}