{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\BoardLanes.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { BoardContext } from './Board';\nimport Lane from './Lane';\n\nfunction BoardLanes(props) {\n  const {\n    DragOverEvent,\n    DropEvent,\n    TaskContainerDragStartEvent,\n    TaskContainerDropEvent,\n    TaskContainerDragOverEvent\n  } = useContext(BoardContext);\n  const [divWidth, setDivWidth] = useState(0);\n  useEffect(() => {\n    const totalWidth = props.stages.length * 292 + props.stages.length * 20;\n    setDivWidth(totalWidth);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: divWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.stages.map((stage, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-column\",\n    key: index,\n    onDragStart: event => TaskContainerDragStartEvent(event, stage.id),\n    onDragOver: event => TaskContainerDragOverEvent(event),\n    onDrop: event => TaskContainerDropEvent(event, stage.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header stage-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-title text-uppercase text-truncate py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, stage.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    onDrop: event => DropEvent(event, stage.id),\n    onDragOver: event => DragOverEvent(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Lane, {\n    stage: stage,\n    key: stage.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: event => TaskContainerDropEvent(event, stage.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  })))));\n}\n\nexport default BoardLanes;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/BoardLanes.js"],"names":["React","useContext","useState","useEffect","BoardContext","Lane","BoardLanes","props","DragOverEvent","DropEvent","TaskContainerDragStartEvent","TaskContainerDropEvent","TaskContainerDragOverEvent","divWidth","setDivWidth","totalWidth","stages","length","width","map","stage","index","event","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,YAAR,QAA2B,SAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA,SAAf;AAAyBC,IAAAA,2BAAzB;AAAqDC,IAAAA,sBAArD;AAA4EC,IAAAA;AAA5E,MAA0GX,UAAU,CAACG,YAAD,CAA1H;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMY,UAAU,GAAIR,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsB,GAAvB,GAA6BV,KAAK,CAACS,MAAN,CAAaC,MAAb,GAAsB,EAAtE;AACAH,IAAAA,WAAW,CAACC,UAAD,CAAX;AACD,GAHM,EAGL,EAHK,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEL;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,KAAK,CAACS,MAAN,CAAaG,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBAChB,uDACA;AAAK,IAAA,SAAS,EAAC,aAAf;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,WAAW,EAAGC,KAAD,IAAUZ,2BAA2B,CAACY,KAAD,EAAOF,KAAK,CAACG,EAAb,CAFpD;AAGE,IAAA,UAAU,EAAGD,KAAD,IAAUV,0BAA0B,CAACU,KAAD,CAHlD;AAIE,IAAA,MAAM,EAAGA,KAAD,IAAWX,sBAAsB,CAACW,KAAD,EAAQF,KAAK,CAACG,EAAd,CAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,IADT,CADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,WAAf;AACA,IAAA,MAAM,EAAGF,KAAD,IAAWb,SAAS,CAACa,KAAD,EAAQF,KAAK,CAACG,EAAd,CAD5B;AAEA,IAAA,UAAU,EAAGD,KAAD,IAAUd,aAAa,CAACc,KAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAb;AACE,IAAA,GAAG,EAAEA,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CANF,CANF,CADA,eAqBC;AAAK,IAAA,MAAM,EAAGD,KAAD,IAAWX,sBAAsB,CAACW,KAAD,EAAQF,KAAK,CAACG,EAAd,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBD,CADD,CADD,CADA,CADJ;AAiCH;;AAED,eAAejB,UAAf","sourcesContent":["import React,{useContext,useState,useEffect} from 'react'\r\nimport {BoardContext} from './Board';\r\nimport Lane from './Lane'\r\nfunction BoardLanes(props) {\r\n    const {DragOverEvent,DropEvent,TaskContainerDragStartEvent,TaskContainerDropEvent,TaskContainerDragOverEvent} = useContext(BoardContext);\r\n    const [divWidth, setDivWidth] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        const totalWidth = (props.stages.length * 292)+(props.stages.length * 20);\r\n        setDivWidth(totalWidth)\r\n      },[]);\r\n    return (\r\n        <div className=\"column-wrapper\">\r\n        <div style={{ width: divWidth }} >\r\n        {props.stages.map((stage, index) => (\r\n          <>\r\n          <div className=\"card-column\"\r\n            key={index}         \r\n            onDragStart={(event) =>TaskContainerDragStartEvent(event,stage.id)}\r\n            onDragOver={(event) =>TaskContainerDragOverEvent(event)}\r\n            onDrop={(event) => TaskContainerDropEvent(event, stage.id)}\r\n          >\r\n            <div className=\"card bg-light\">\r\n              <div className=\"card-header stage-header\">\r\n                <h6 className=\"card-title text-uppercase text-truncate py-2\">\r\n                  {stage.name}\r\n                </h6>\r\n              </div>\r\n              <div className=\"card-body\" \r\n              onDrop={(event) => DropEvent(event, stage.id)}\r\n              onDragOver={(event) =>DragOverEvent(event)}>\r\n                <Lane stage={stage}\r\n                  key={stage.id}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n           <div onDrop={(event) => TaskContainerDropEvent(event, stage.id)}>\r\n            \r\n           </div>\r\n           </>\r\n        ))}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BoardLanes\r\n"]},"metadata":{},"sourceType":"module"}