{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\Board.js\";\nimport React, { useState, useEffect, useReducer, createContext } from \"react\";\nimport NewTask from \"./New Task/NewTask\";\nimport BoardLanes from \"./BoardLanes\";\nconst stagesData = [{\n  name: \"Planning\",\n  id: 1\n}, {\n  name: \"In Progress\",\n  id: 2\n}, {\n  name: \"Review\",\n  id: 3\n}, {\n  name: \"Testing\",\n  id: 4\n}, {\n  name: \"Launch\",\n  id: 5\n}];\nconst taskData = [{\n  id: 1,\n  title: \"Task 1\",\n  description: \"Testing of\",\n  stage: 1,\n  startDate: new Date(2020, 3, 1),\n  endDate: new Date(2020, 3, 20)\n}, {\n  id: 2,\n  title: \"Task 2\",\n  description: \"Just Test 2\",\n  stage: 1,\n  startDate: new Date(2020, 2, 25),\n  endDate: new Date(2020, 3, 25)\n}, {\n  id: 3,\n  title: \"Task 3\",\n  description: \"Just Test\",\n  stage: 2,\n  startDate: new Date(2020, 1, 1),\n  endDate: new Date(2020, 1, 25)\n}, {\n  id: 4,\n  title: \"Task 4\",\n  description: \"Just Test\",\n  stage: 3,\n  startDate: new Date(2020, 0, 5),\n  endDate: new Date(2020, 1, 15)\n}, {\n  id: 5,\n  title: \"Task 5\",\n  description: \"Just Test\",\n  stage: 4,\n  startDate: new Date(2020, 2, 5),\n  endDate: new Date(2020, 3, 12)\n}, {\n  id: 5,\n  title: \"Task 5\",\n  description: \"Just Test\",\n  stage: 5,\n  startDate: new Date(2020, 2, 5),\n  endDate: new Date(2020, 3, 12)\n}];\nexport const BoardContext = createContext({});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ON_DROP\":\n      const droppedTask = action.payload;\n      const updatedTasks = state.map(task => {\n        if (task.id === droppedTask.id) {\n          return droppedTask;\n        }\n\n        return task;\n      });\n      return updatedTasks;\n\n    case \"LOAD_DATA\":\n      return action.payload;\n\n    case \"ADD_NEW\":\n      return [...state, action.payload];\n\n    case \"ON_DELETE\":\n      return state.filter(task => task.id !== action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction Board() {\n  const [taskState, dispatch] = useReducer(reducer, taskData);\n  const [stages, setStage] = useState(stagesData);\n  useEffect(() => {\n    dispatch({\n      type: \"LOAD_DATA\",\n      payload: taskState\n    });\n  }, [taskState, stages]);\n\n  const onDragStartHandler = (event, taskId, stageId) => {\n    var data = {\n      taskId: taskId,\n      stageId: stageId\n    };\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(data));\n    event.dataTransfer.effectAllowed = \"move\"; //event.dataTransfer.setData(\"taskName\", taskName);\n  };\n\n  const onTaskContainerDragStartHandler = (event, laneId) => {\n    let fromBox = JSON.stringify({\n      laneId: laneId\n    });\n    event.dataTransfer.setData(\"laneId\", fromBox);\n  };\n\n  const onTaskContainerDragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onTaskContainerDropHandler = (event, droppedLaneId) => {\n    /*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\r\n     swapStages(fromLane.laneId,droppedLaneId) */\n  };\n\n  const swapStages = (fromLane, toLane) => {\n    /*  const filterStage = stages.filter((x) => x.id === fromLane);\r\n     filterStage[0].id=toLane;\r\n     setStage([...stages,filterStage[0]]) */\n  };\n\n  const onDragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n  };\n\n  const onDropHandler = (event, droppedStageId) => {\n    let droppedData = event.dataTransfer.getData(\"text/plain\");\n    droppedData = JSON.parse(droppedData);\n    const filterTask = taskState.filter(x => x.id === droppedData.taskId);\n    filterTask[0].stage = droppedStageId;\n    dispatch({\n      type: \"ON_DROP\",\n      payload: filterTask[0]\n    });\n  };\n\n  const onAddingNewTask = dataFromChild => {\n    dataFromChild.stage = 1;\n    dataFromChild.id = taskState.length + 1;\n    dispatch({\n      type: \"ADD_NEW\",\n      payload: dataFromChild\n    });\n  };\n\n  const onUpdatingTask = dataFromChild => {\n    dispatch({\n      type: \"ON_DROP\",\n      payload: dataFromChild\n    });\n  };\n\n  const onDeletingTask = taskId => {\n    dispatch({\n      type: \"ON_DELETE\",\n      payload: taskId\n    });\n  };\n\n  const ContextData = {\n    taskState,\n    onDragStartHandler,\n    onDragOverHandler,\n    onDropHandler,\n    onUpdatingTask,\n    onDeletingTask,\n    onTaskContainerDragStartHandler,\n    onTaskContainerDropHandler,\n    onTaskContainerDragOverHandler\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BoardContext.Provider, {\n    value: ContextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BoardLanes, {\n    stages: stages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/Board.js"],"names":["React","useState","useEffect","useReducer","createContext","NewTask","BoardLanes","stagesData","name","id","taskData","title","description","stage","startDate","Date","endDate","BoardContext","reducer","state","action","type","droppedTask","payload","updatedTasks","map","task","filter","Board","taskState","dispatch","stages","setStage","onDragStartHandler","event","taskId","stageId","data","dataTransfer","setData","JSON","stringify","effectAllowed","onTaskContainerDragStartHandler","laneId","fromBox","onTaskContainerDragOverHandler","types","preventDefault","onTaskContainerDropHandler","droppedLaneId","swapStages","fromLane","toLane","onDragOverHandler","onDropHandler","droppedStageId","droppedData","getData","parse","filterTask","x","onAddingNewTask","dataFromChild","length","onUpdatingTask","onDeletingTask","ContextData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,EAAE,EAAE;AAAxB,CADiB,EAEjB;AAAED,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,EAAE,EAAE;AAA3B,CAFiB,EAGjB;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,EAAE,EAAE;AAAtB,CAHiB,EAIjB;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,EAAE,EAAE;AAAvB,CAJiB,EAKjB;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,EAAE,EAAE;AAAtB,CALiB,CAAnB;AAOA,MAAMC,QAAQ,GAAG,CACf;AACED,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,YAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CADe,EASf;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,aAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CATe,EAiBf;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAjBe,EAyBf;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAzBe,EAiCf;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAjCe,EAyCf;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,WAAW,EAAE,WAHf;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAKEC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMEC,EAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AANX,CAzCe,CAAjB;AAoDA,OAAO,MAAME,YAAY,GAAGb,aAAa,CAAC,EAAD,CAAlC;;AAEP,SAASc,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,YAAMC,WAAW,GAAGF,MAAM,CAACG,OAA3B;AACA,YAAMC,YAAY,GAAGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACvC,YAAIA,IAAI,CAACjB,EAAL,KAAYa,WAAW,CAACb,EAA5B,EAAgC;AAC9B,iBAAOa,WAAP;AACD;;AACD,eAAOI,IAAP;AACD,OALoB,CAArB;AAMA,aAAOF,YAAP;;AACF,SAAK,WAAL;AACE,aAAOJ,MAAM,CAACG,OAAd;;AACF,SAAK,SAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACF,SAAK,WAAL;AACE,aAAOJ,KAAK,CAACQ,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACjB,EAAL,KAAYW,MAAM,CAACG,OAA1C,CAAP;;AACF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD;;AACD,SAASS,KAAT,GAAiB;AACf,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwB3B,UAAU,CAACe,OAAD,EAAUR,QAAV,CAAxC;AACA,QAAM,CAACqB,MAAD,EAASC,QAAT,IAAqB/B,QAAQ,CAACM,UAAD,CAAnC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,WAAR;AAAqBE,MAAAA,OAAO,EAAEM;AAA9B,KAAD,CAAR;AACD,GAFQ,EAEN,CAACA,SAAD,EAAYE,MAAZ,CAFM,CAAT;;AAIA,QAAME,kBAAkB,GAAG,CACzBC,KADyB,EAEzBC,MAFyB,EAGzBC,OAHyB,KAItB;AACH,QAAIC,IAAI,GAAG;AACTF,MAAAA,MAAM,EAAEA,MADC;AAETC,MAAAA,OAAO,EAAEA;AAFA,KAAX;AAIAF,IAAAA,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,YAA3B,EAAyCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzC;AACAH,IAAAA,KAAK,CAACI,YAAN,CAAmBI,aAAnB,GAAmC,MAAnC,CANG,CAOH;AACD,GAZD;;AAcA,QAAMC,+BAA+B,GAAG,CAACT,KAAD,EAAOU,MAAP,KAAkB;AACxD,QAAIC,OAAO,GAAGL,IAAI,CAACC,SAAL,CAAe;AAAEG,MAAAA,MAAM,EAAEA;AAAV,KAAf,CAAd;AACAV,IAAAA,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2B,QAA3B,EAAqCM,OAArC;AACD,GAHD;;AAIA,QAAMC,8BAA8B,GAAIZ,KAAD,IAAW;AAChD,QAAIA,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACI,YAAN,CAAmBS,KAAnB,CAAyB,CAAzB,MAAgC,YAA1D,EAAwE;AACtEb,MAAAA,KAAK,CAACc,cAAN;AACD;AACF,GAJD;;AAMA,QAAMC,0BAA0B,GAAG,CAACf,KAAD,EAAQgB,aAAR,KAA0B;AAC7D;;AAEC,GAHD;;AAKD,QAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAErC;;;AAGF,GALF;;AAMC,QAAMC,iBAAiB,GAAIpB,KAAD,IAAW;AACnC,QAAIA,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACI,YAAN,CAAmBS,KAAnB,CAAyB,CAAzB,MAAgC,YAA1D,EAAwE;AACtEb,MAAAA,KAAK,CAACc,cAAN;AACD;AACF,GAJD;;AAMA,QAAMO,aAAa,GAAG,CAACrB,KAAD,EAAQsB,cAAR,KAA2B;AAC/C,QAAIC,WAAW,GAAGvB,KAAK,CAACI,YAAN,CAAmBoB,OAAnB,CAA2B,YAA3B,CAAlB;AACAD,IAAAA,WAAW,GAAGjB,IAAI,CAACmB,KAAL,CAAWF,WAAX,CAAd;AACA,UAAMG,UAAU,GAAG/B,SAAS,CAACF,MAAV,CAAkBkC,CAAD,IAAOA,CAAC,CAACpD,EAAF,KAASgD,WAAW,CAACtB,MAA7C,CAAnB;AACAyB,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAc/C,KAAd,GAAsB2C,cAAtB;AACA1B,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,SAAR;AAAmBE,MAAAA,OAAO,EAAEqC,UAAU,CAAC,CAAD;AAAtC,KAAD,CAAR;AACD,GAND;;AAQA,QAAME,eAAe,GAAIC,aAAD,IAAmB;AACzCA,IAAAA,aAAa,CAAClD,KAAd,GAAsB,CAAtB;AACAkD,IAAAA,aAAa,CAACtD,EAAd,GAAmBoB,SAAS,CAACmC,MAAV,GAAmB,CAAtC;AACAlC,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,SAAR;AAAmBE,MAAAA,OAAO,EAAEwC;AAA5B,KAAD,CAAR;AACD,GAJD;;AAMA,QAAME,cAAc,GAAIF,aAAD,IAAmB;AACxCjC,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,SAAR;AAAmBE,MAAAA,OAAO,EAAEwC;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAI/B,MAAD,IAAY;AACjCL,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE,WAAR;AAAqBE,MAAAA,OAAO,EAAEY;AAA9B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMgC,WAAW,GAAG;AAClBtC,IAAAA,SADkB;AAElBI,IAAAA,kBAFkB;AAGlBqB,IAAAA,iBAHkB;AAIlBC,IAAAA,aAJkB;AAKlBU,IAAAA,cALkB;AAMlBC,IAAAA,cANkB;AAOlBvB,IAAAA,+BAPkB;AAQlBM,IAAAA,0BARkB;AASlBH,IAAAA;AATkB,GAApB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEqB,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEpC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADF,CAPF,CADF;AAiBD;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect, useReducer, createContext } from \"react\";\r\nimport NewTask from \"./New Task/NewTask\";\r\nimport BoardLanes from \"./BoardLanes\";\r\n\r\nconst stagesData = [\r\n  { name: \"Planning\", id: 1 },\r\n  { name: \"In Progress\", id: 2 },\r\n  { name: \"Review\", id: 3 },\r\n  { name: \"Testing\", id: 4 },\r\n  { name: \"Launch\", id: 5 },\r\n];\r\nconst taskData = [\r\n  {\r\n    id: 1,\r\n    title: \"Task 1\",\r\n    description: \"Testing of\",\r\n    stage: 1,\r\n    startDate: new Date(2020, 3, 1),\r\n    endDate: new Date(2020, 3, 20),\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Task 2\",\r\n    description: \"Just Test 2\",\r\n    stage: 1,\r\n    startDate: new Date(2020, 2, 25),\r\n    endDate: new Date(2020, 3, 25),\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Task 3\",\r\n    description: \"Just Test\",\r\n    stage: 2,\r\n    startDate: new Date(2020, 1, 1),\r\n    endDate: new Date(2020, 1, 25),\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Task 4\",\r\n    description: \"Just Test\",\r\n    stage: 3,\r\n    startDate: new Date(2020, 0, 5),\r\n    endDate: new Date(2020, 1, 15),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Task 5\",\r\n    description: \"Just Test\",\r\n    stage: 4,\r\n    startDate: new Date(2020, 2, 5),\r\n    endDate: new Date(2020, 3, 12),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Task 5\",\r\n    description: \"Just Test\",\r\n    stage: 5,\r\n    startDate: new Date(2020, 2, 5),\r\n    endDate: new Date(2020, 3, 12),\r\n  },\r\n];\r\n\r\n \r\nexport const BoardContext = createContext({});\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ON_DROP\":\r\n      const droppedTask = action.payload;\r\n      const updatedTasks = state.map((task) => {\r\n        if (task.id === droppedTask.id) {\r\n          return droppedTask;\r\n        }\r\n        return task;\r\n      });\r\n      return updatedTasks;\r\n    case \"LOAD_DATA\":\r\n      return action.payload;\r\n    case \"ADD_NEW\":\r\n      return [...state, action.payload];\r\n    case \"ON_DELETE\":\r\n      return state.filter((task) => task.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction Board() {\r\n  const [taskState, dispatch] = useReducer(reducer, taskData);\r\n  const [stages, setStage] = useState(stagesData);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_DATA\", payload: taskState });\r\n  }, [taskState, stages]);\r\n\r\n  const onDragStartHandler = (\r\n    event,\r\n    taskId,\r\n    stageId\r\n  ) => {\r\n    var data = {\r\n      taskId: taskId,\r\n      stageId: stageId,\r\n    };\r\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(data));\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n    //event.dataTransfer.setData(\"taskName\", taskName);\r\n  };\r\n\r\n  const onTaskContainerDragStartHandler = (event,laneId) => {\r\n    let fromBox = JSON.stringify({ laneId: laneId });\r\n    event.dataTransfer.setData(\"laneId\", fromBox);\r\n  };\r\n  const onTaskContainerDragOverHandler = (event) => {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onTaskContainerDropHandler = (event, droppedLaneId) => {\r\n  /*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\r\n   swapStages(fromLane.laneId,droppedLaneId) */\r\n  };\r\n  \r\n const swapStages = (fromLane, toLane) => {\r\n\r\n     /*  const filterStage = stages.filter((x) => x.id === fromLane);\r\n      filterStage[0].id=toLane;\r\n      setStage([...stages,filterStage[0]]) */\r\n  };\r\n  const onDragOverHandler = (event) => {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onDropHandler = (event, droppedStageId) => {\r\n    let droppedData = event.dataTransfer.getData(\"text/plain\");\r\n    droppedData = JSON.parse(droppedData);\r\n    const filterTask = taskState.filter((x) => x.id === droppedData.taskId);\r\n    filterTask[0].stage = droppedStageId;\r\n    dispatch({ type: \"ON_DROP\", payload: filterTask[0] });\r\n  };\r\n\r\n  const onAddingNewTask = (dataFromChild) => {\r\n    dataFromChild.stage = 1;\r\n    dataFromChild.id = taskState.length + 1;\r\n    dispatch({ type: \"ADD_NEW\", payload: dataFromChild });\r\n  };\r\n\r\n  const onUpdatingTask = (dataFromChild) => {\r\n    dispatch({ type: \"ON_DROP\", payload: dataFromChild });\r\n  };\r\n\r\n  const onDeletingTask = (taskId) => {\r\n    dispatch({ type: \"ON_DELETE\", payload: taskId });\r\n  };\r\n\r\n  const ContextData = {\r\n    taskState,\r\n    onDragStartHandler,\r\n    onDragOverHandler,\r\n    onDropHandler,\r\n    onUpdatingTask,\r\n    onDeletingTask,\r\n    onTaskContainerDragStartHandler,\r\n    onTaskContainerDropHandler,\r\n    onTaskContainerDragOverHandler\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <NewTask />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n            <BoardContext.Provider value={ContextData}>\r\n                <BoardLanes stages={stages}></BoardLanes>\r\n            </BoardContext.Provider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}