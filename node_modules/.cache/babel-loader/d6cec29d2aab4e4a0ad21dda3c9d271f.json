{"ast":null,"code":"var _jsxFileName = \"H:\\\\Project\\\\React\\\\Kanban Board\\\\react-kanban-board\\\\src\\\\components\\\\Board\\\\CardItem.js\";\nimport React, { useState, useContext } from \"react\";\nimport { BoardContext } from './Board';\nimport { Card, Modal, Button } from \"react-bootstrap\";\nimport TaskForm from './New Task/TaskForm';\n\nconst formateDate = date => {\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var month = months[date.getMonth()];\n  var day = \"\" + date.getDate();\n  if (day.length < 2) day = \"0\" + day;\n  return month + \" \" + day + \", \" + date.getFullYear();\n};\n\nfunction CardItem(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const {\n    onDeletingTask\n  } = useContext(BoardContext);\n\n  const handleShow = () => {\n    setShow(true); //setReset(true)\n  };\n\n  const clickHandler = type => {\n    if (type === \"edit\") {\n      handleShow();\n    } else if (type === \"delete\") {\n      onDeletingTask(props.task.id);\n    }\n  };\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TaskForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    key: props.task.id,\n    className: \"card-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, props.task.title, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-task-option pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => clickHandler(\"edit\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), \"\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => clickHandler(\"delete\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Start Date:\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, formateDate(props.task.startDate))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Due Date:\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, formateDate(props.task.endDate))))))));\n}\n\nexport default CardItem;","map":{"version":3,"sources":["H:/Project/React/Kanban Board/react-kanban-board/src/components/Board/CardItem.js"],"names":["React","useState","useContext","BoardContext","Card","Modal","Button","TaskForm","formateDate","date","months","month","getMonth","day","getDate","length","getFullYear","CardItem","props","show","setShow","handleClose","onDeletingTask","handleShow","clickHandler","type","task","id","handleSubmit","title","startDate","endDate"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from \"react\";\r\nimport {BoardContext} from './Board' \r\nimport { Card, Modal, Button } from \"react-bootstrap\";\r\nimport TaskForm from './New Task/TaskForm'\r\nconst formateDate = (date) => {\r\n  var months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  var month = months[date.getMonth()];\r\n  var day = \"\" + date.getDate();\r\n\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return month + \" \" + day + \", \" + date.getFullYear();\r\n};\r\n\r\nfunction CardItem(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const {onDeletingTask} = useContext(BoardContext);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    //setReset(true)\r\n  };\r\n\r\n  const clickHandler = (type) => {\r\n    if (type === \"edit\") {\r\n      handleShow();\r\n    } else if (type === \"delete\") {\r\n      onDeletingTask(props.task.id)\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {};\r\n\r\n  return (\r\n    <>\r\n      <TaskForm></TaskForm>\r\n      <Card key={props.task.id} className=\"card-task\">\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {props.task.title}{\" \"}\r\n            <div className=\"card-task-option pull-right\">\r\n              <a onClick={() => clickHandler(\"edit\")}>\r\n                <i className=\"fas fa-edit\"></i>\r\n              </a>\r\n              &nbsp;\r\n              <a onClick={() => clickHandler(\"delete\")}>\r\n                <i className=\"fas fa-trash\"></i>\r\n              </a>\r\n            </div>\r\n          </Card.Title>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"font-weight-bold\">Start Date:</td>\r\n                <td>{formateDate(props.task.startDate)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"font-weight-bold\">Due Date:</td>\r\n                <td className=\"pull-right\">\r\n                  {formateDate(props.task.endDate)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n"]},"metadata":{},"sourceType":"module"}